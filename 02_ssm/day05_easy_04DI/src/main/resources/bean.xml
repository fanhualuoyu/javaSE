<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--spring中的依赖注入
        依赖注入：Dependency Injection
        IOC的作用：
            降低程序间的耦合（依赖关系）
        依赖关系的管理：
            以后都交给spring来维护
        在当前类需要用到其他类的对象，由spring为我们提供，我们只需要在配置文件中说明
        依赖关系的维护：就称之为依赖注入
        依赖注入：
            能注入的数据：
                基本类型和String
                其他bean类型(在配置文件中或者注解配置过的bean)
                复杂类型/集合类型
            注入的方式：
                使用构造函数提供
                使用set方法提供
                使用注解提供
    -->


    <!--构造函数注入
            使用的标签：constructor-arg
            标签出现的位置：bean标签的内部
            标签中的属性：
                type:用于指定要注入的数据的数据类型，该数据也是构造函数中某个或某些参数的类型
                index:用于指定要注入的数据给构造函数中指定索引位置的参数赋值。索引的位置时从0开始
                name:用于指定给构造函数中指定名称的参数赋值
                ============以上三个用于指定给构造函数中的哪个参数赋值=============
                value:用于提供基本类型和String类型的数据
                ref:用于指定其他bean类型数据。她是在spring的Ioc核心容器中出现过的bean对象
    -->

    <bean id="accountService" class="cn.zh.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="test"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
        <constructor-arg name="birthday" ref="now"></constructor-arg>
    </bean>

    <!--配置一个日期对象-->
    <bean id="now" class="java.util.Date"></bean>


    <!--set方法注入
        涉及的标签：property
        出现的位置：bean标签的内部
        标签的属性：
            name:用于指定注入时所调用的set方法名称
            value:
            ref:
    -->
    <bean id="accountService2" class="cn.zh.service.impl.AccountServiceImpl2">
        <property name="name" value="test"></property>
        <property name="age"  value="18"></property>
        <property name="birthday" ref="now"></property>
    </bean>


    <!--复杂类型的注入/集合类型的注入
        用于给List结构集合注入的标签：
            list array set
        用于给Map结构注入的标签：
            map props
        结构相同，标签可以互换
    -->
    <bean id="accountService3" class="cn.zh.service.impl.AccountServiceImpl3">
        <property name="myStrings">
            <array>
                <value>a</value>
                <value>b</value>
                <value>c</value>
            </array>
        </property>

        <property name="myList">
            <list>
                <value>aa</value>
                <value>bb</value>
                <value>cc</value>
            </list>
        </property>

        <property name="mySet">
            <set>
                <value>aaa</value>
                <value>bbb</value>
                <value>ccc</value>
            </set>
        </property>

        <property name="myMap">
            <map>
                <entry key="testA" value="aaaa"></entry>
                <entry key="testB" value="bbbb"></entry>
                <entry key="testC" value="cccc"></entry>
            </map>
        </property>

        <property name="myProps">
            <props>
                <prop key="testA">aaaaa</prop>
                <prop key="testB">bbbbb</prop>
                <prop key="testC">ccccc</prop>
            </props>
        </property>

    </bean>

</beans>